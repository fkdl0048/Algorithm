/* ************************************************************************** */
/*                                                                            */
/*                                                      :::    :::    :::     */
/*   Problem Number: 1463                              :+:    :+:      :+:    */
/*                                                    +:+    +:+        +:+   */
/*   By: fkdl4878 <boj.kr/u/fkdl4878>                +#+    +#+          +#+  */
/*                                                  +#+      +#+        +#+   */
/*   https://boj.kr/1463                           #+#        #+#      #+#    */
/*   Solved: 2024/06/20 00:16:03 by fkdl4878      ###          ###   ##.kr    */
/*                                                                            */
/* ************************************************************************** */

// 정수 x에 대해서 1로 만드는 문제
// 사용할 수 있는 연산은 3가지
    // x가 3으로 나눠 떨어지면 3으로 나눈다.
    // x가 2로 나눠 떨어지면 2로 나눈다.
    // 1을 뺀다.
// 이 연산을 사용해서 1로 만들 때 최소한의 연산을 사용
// 각각 연산 함수를 만들고 이를 계산 함수에서 활용하여 계산

// ps1
// dp 문제이기 때문에 dp로 풀어야 함
// 먼저 0~5까지 dp를 입력값에 넣어줌
// 이후 6부터는 반복으로 만들어야 함 N까지
    // 6의 경우 2 -> 1 총 두 번의 연산이 필요하다.
    // 따라서 dp[3] + dp[2]의 연산
// 전 결과를 가져오기 위해서 전 계산의 조합으로 구성됨
    // 7의 경우 7 -> 6 -> 2 -> 1
    // dp로는 아마 dp[6] + 
// 즉, 

#include <bits/stdc++.h>

using namespace std;

int solve(int n)
{
    vector<int> dp(n + 1, 0);

// dp 수행..
    for (int i = 2; i <= n; i++)
    {
        dp[i] = dp[i - 1] + 1;
        if (i % 2 == 0)
            dp[i] = min(dp[i], dp[i / 2] + 1);
        if (i % 3 == 0)
            dp[i] = min(dp[i], dp[i / 3] + 1);
    }

// 결과 출력
    return dp[n];
}

int main()
{
    int n;

    cin >> n;

    cout << solve(n);
}